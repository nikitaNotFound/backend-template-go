version: '3.8'

services:
  api:
    build:
      context: ../.
      dockerfile: ../Dockerfile
    image: api_server:latest
    container_name: api_server 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - ENV=dev
    env_file:
      - .env.dev
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: app_postgres 
    environment:
      POSTGRES_DB: app_db 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: superpassword300E
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: app_redis 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    container_name: app_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
volumes:
  postgres-data:
  redis-data:
networks:
  app-network:
    driver: bridge