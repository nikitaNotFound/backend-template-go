// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package sqlcgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (login, pwd_hash, created_at) VALUES ($1, $2, $3) RETURNING id, login, pwd_hash, created_at
`

type CreateUserParams struct {
	Login     string           `json:"login"`
	PwdHash   string           `json:"pwd_hash"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Login, arg.PwdHash, arg.CreatedAt)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Login,
		&i.PwdHash,
		&i.CreatedAt,
	)
	return i, err
}

const getUserByLogin = `-- name: GetUserByLogin :one
SELECT id, login, pwd_hash, created_at FROM users WHERE login = $1
`

func (q *Queries) GetUserByLogin(ctx context.Context, login string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByLogin, login)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Login,
		&i.PwdHash,
		&i.CreatedAt,
	)
	return i, err
}
